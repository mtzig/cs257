REQUEST: /languages/

GET parameters
    none

RESPONSE: a JSON list of dictionaries, each of which represents one
language and its id, sorted alphabetically by English name. 
Each dictionary in this list will have the following fields.

   language -- (TEXT) the English name of the language
   id -- (INTEGER) the id associated with the language

REQUEST: /country/language/<country_code>

GET parameters
    country_code -- the ISO3 code of the country user want language information from

RESPONSE: a JSON list of dictionaries, each of which represents one
language associated with country_code, sorted alphabetically by English name. 
Each dictionary in this list will have the following fields.

   language_name -- (TEXT) the English name of the language

EXAMPLE(S):
  /country/language/GBR
  
  [{"language_name": "Alderney French"}, {"language_name": "Cornish"}, {"language_name": "Guernsey French"}, {"language_name": "Irish"}, {"language_name": "Jersey French"}, {"language_name": "Manx"}, {"language_name": "Norn"}, {"language_name": "Romani"}, {"language_name": "Scots"}, {"language_name": "Scottish Gaelic"}, {"language_name": "Welsh"}, {"language_name": "Yiddish (Europe)"}]

REQUEST: /language/<language_name>

GET parameters
    language_name -- English name of language user wants information about

RESPONSE: a JSON list of dictionaries, each of which represents one
language and its pertinent information, in arbitrary unsorted order

   en_name - (TEXT) the English name of the language
   es_name - (TEXT) the Spanish name of the language
   fr_name - (TEXT) the French name of the language
   native_name - (TEXT) the native name of the language
   speakers - (INTEGER) the number of speakers of the language
   lat - (DECIMAL) the decimal latitude of the language, up to 4 decimal places
   long - (DECIMAL) the decimal longitude of the language, up to 4 decimal places
   vulnerability - (TEXT) the level of endangerment of the language
   country - (TEXT) the countries the language is based in

EXAMPLE(S):
  /language/<language_name>

REQUEST: /search_type/<search_string>

GET parameters
    search_string -- the search_string user wants to search

RESPONSE: a JSON list of one dictionary which details the type of search
the search_strng is.

   search_type - (TEXT) IF search_string is country, then contains its ISO3 code
                 (INTEGER) elsewise, -1 if not a valid searchstring, >1 if a language

EXAMPLE(S):
  /search_type/"Great Britain"
  
  [{"search_type": "GBR"}]

  /search_type/"Beaver"

  [{"search_type": 1}]
  
REQUEST: /country_data/

GET parameters
    none

RESPONSE: a JSON dictionary of dictionaries, each of which represents one
language, unsorted. 
Each dictionary in this JSON will have the following fields.

   numLanguages -- (TEXT) the number of endangered languages in the country
   languages -- (ARRAY) a list of every endangered language in the country